generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "postgresql://default:root@54.251.11.200:5432/shoptaiche"
}

model Tag {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Product {
  id             Int            @id @default(autoincrement())
  title          String         @db.VarChar(128)
  price          Int            @default(0)
  description    String         @default("") @db.VarChar(10000)
  amount         Int            @default(1)
  shop_id        Int?
  tag_id         Int?
  discount       Int?
  discount_start DateTime?
  discount_end   DateTime?
  created_at     DateTime       @default(now())
  updated_at     DateTime?      @updatedAt
  Love           Love[]
  Order          Order[]
  tag            Tag?           @relation(fields: [tag_id], references: [id])
  ProductMedia   ProductMedia[]

  @@index([title], type: Hash)
}

model Love {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  created_at DateTime @default(now())
  product    Product? @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([product_id], type: Hash)
}

model ProductMedia {
  id         Int      @id @default(autoincrement())
  url        String   @db.VarChar(512)
  product_id Int?
  sequence   Int?     @default(0)
  product    Product? @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([product_id], type: Hash)
}

model Order {
  id             Int            @id @default(autoincrement())
  user_id        Int
  product_id     Int
  shop_id        Int?
  amount         Int            @default(1)
  ship_fee       Int            @default(20000)
  payment_method PAYMENT_METHOD @default(CASH)
  address        String         @db.VarChar(256)
  note           String?        @db.VarChar(256)
  status         ORDER_STATUS   @default(PROCESSING)
  created_at     DateTime       @default(now())
  total_price    Int            @default(0)
  Product        Product        @relation(fields: [product_id], references: [id])

  @@index([user_id], type: Hash)
}

enum ORDER_STATUS {
  PROCESSING
  DELIVERING
  WAIT_FOR_PAYMENT
  SUCCESS
  CANCELED
}

enum PAYMENT_METHOD {
  CASH
}

enum order_status {
  PROCESSING
  DELIVERING
  WAIT_FOR_PAYMENT
  SUCCESS
  CANCELED
}

enum payment_method {
  CASH
}
